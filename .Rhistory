####################
# Load in packages and variables
source("0_global.R", local = TRUE)
# Load exposure data
dat_exp <- read.csv("data/filtered/dat_exp_filt.csv") %>%
replace_na(list(vot = 0)) %>%
mutate(cond_sim = case_when(
cond_sim == "similar" ~ "direct",
cond_sim == "dissimilar" ~ "indirect",
TRUE ~ cond_sim
),
cond_exp = paste(cond_sim, cond_var, sep = "-"),
stim_cond = case_when(
stim_cond == "similar" ~ "direct",
stim_cond == "dissimilar" ~ "indirect",
TRUE ~ stim_cond
),
stim_type = if_else(type == "nonword", "pseudo", "real"),
talker = speaker - 2,
talker_list = as.numeric(gsub("order", "", cond_order)),
experiment = case_when(
version == "1a" ~ "exp 1",
version == "1b" ~ "exp 2",
version == "2a" ~ "exp 3"
),
inv_rt = -1000/real_rt) %>%
select(-c(type, speaker, training, cond_order, version, cond_stim_type, test_task)) %>%
rename(stim_onset_time = onset,
stim_vot = vot,
stim_offset_time = offset)
unique(dat_exp$cond_sim)
# Load test data
dat_test <- read.csv("data/filtered/dat_test_filt.csv") %>%
mutate(cond_sim = case_when(
cond_sim == "similar" ~ "direct",
cond_sim == "dissimilar" ~ "indirect",
cond_sim == "none" ~ "test"
TRUE ~ cond_sim
# Load test data
dat_test <- read.csv("data/filtered/dat_test_filt.csv") %>%
mutate(cond_sim = case_when(
cond_sim == "similar" ~ "direct",
cond_sim == "dissimilar" ~ "indirect",
cond_sim == "none" ~ "test",
TRUE ~ cond_sim
),
cond_var = if_else(cond_var == "none", "only", cond_var),
match_type = if_else(match_type == "control", "unrelated", match_type),
cond_exp = paste(cond_sim, cond_var, sep = "-"),
talker = speaker - 2,
talker_list = as.numeric(gsub("order", "", cond_order)),
experiment = case_when(
version == "1a" ~ "exp 1",
version == "1b" ~ "exp 2",
version == "2a" ~ "exp 3",
version == "1c" ~ "exp 1/2",
version == "2b" ~ "exp 3"
),
inv_rt = -1000/resp_rt) %>%
select(-c(speaker, training, test_task, prime_cond, cond_order, order, version,
cond_train, base_prime, base_target)) %>%
rename(prime_onset_time = onset,
prime_vot = vot,
prime_offset_time = offset)
unique(dat_test$cond_sim)
# Assign new IDs
par_tab <- dat_test %>%
select(participant) %>%
distinct() %>%
mutate(id = 1:nrow(.))
# Add to exposure data
dat_exp <- dat_exp %>%
left_join(par_tab)
# Add to test data
dat_test <- dat_test %>%
left_join(par_tab)
####################
## Select columns ##
####################
# Select and reorder
dat_exp <- dat_exp %>%
select(id, experiment, cond_sim, cond_var, cond_exp, talker_list, match_list,
trial, stim, stim_type, stim_onset, stim_cond,
resp_key, resp_acc, resp_rt, real_rt, inv_rt,
stim_onset_time, stim_offset_time, stim_vot, talker,
Length:base)
# Select and reorder
dat_test <- dat_test %>%
select(id, experiment, cond_sim, cond_var, cond_exp, talker_list, match_list,
trial, prime, prime_onset, target, match_type,
resp_key, resp_acc, resp_rt, inv_rt,
prime_onset_time, prime_offset_time, prime_vot, talker,
Length_prime:stim_pron_target, freq_diff)
# Output
write.csv(dat_exp, "data/to_publish/exposure_phase_critical.csv", row.names = FALSE)
write.csv(dat_test, "data/to_publish/test_phase_critical.csv", row.names = FALSE)
#######
# Get all exposure items
items_exp <- read.csv("data/quality/dat_exp.csv") %>%
mutate(stim_type = if_else(type == "nonword", "pseudo", "real")) %>%
select(stim, stim_onset, stim_type) %>%
distinct()
# Get all test items
items_test <- read.csv("data/quality/dat_test.csv") %>%
select(prime, prime_onset, target, match_type) %>%
distinct() %>%
dplyr::filter(match_type != "real") %>%
mutate(match_type = if_else(match_type == "non", "pseudoword", match_type)) %>%
pivot_wider(id_cols = c(prime, prime_onset),
names_from = match_type,
values_from = target,
names_glue = "{match_type}_target")
# Rename and order
items_exp <- items_exp %>%
mutate(onset_group = case_when(
stim_onset %in% c("p", "t", "k") ~ "direct",
stim_onset %in% c("b", "d", "g") ~ "indirect",
stim_onset %in% c("f", "s", "S") ~ "control",
TRUE ~ "filler"
)) %>%
arrange(onset_group, stim_type, stim_onset, stim)
# Rename and order
items_test <- items_test %>%
mutate(prime_type = if_else(prime_onset %in% c("p", "t", "k"),
"critical", "filler")) %>%
select(prime, prime_onset, prime_type,
identity_target, competitor_target, control_target, pseudoword_target) %>%
arrange(prime_type, prime_onset, prime)
# Output
write.csv(items_exp, "data/to_publish/exposure_items.csv", row.names = FALSE)
write.csv(items_test, "data/to_publish/test_items.csv", row.names = FALSE)
setwd("~/Mirror/dissertation/diss_study_1")
####################
## Set up session ##
####################
# Load packages and variables
source("0_global.R")
####################
## Set up factors ##
####################
# Set up factor levels
lev_var <- c("variant", "invariant")
lab_var <- str_to_title(lev_var)
lev_sim_1a <- c("direct", "indirect", "control")
lab_sim_1a <- str_to_title(lev_sim_1a)
lev_sim <- c("direct", "indirect")
lab_sim <- str_to_title(lev_sim)
lev_exp_1a <- c("direct-variant", "direct-invariant",
"indirect-variant", "indirect-invariant",
"control-variant", "control-invariant")
lab_exp_1a <- str_to_title(lev_exp_1a)
lev_exp <- lev_exp_1a[1:4]
lab_exp <- lab_exp_1a[1:4]
lev_match <- c("identity", "competitor", "unrelated")
lab_match <- str_to_title(lev_match)
# Set up factor table: Experiment 1
tab_exp_1a <- tibble(cond_exp = c("test-only", lev_exp_1a),
cond_exp_fac = factor(cond_exp,
levels = c("test-only", lev_exp_1a),
labels = c("Test-only", lab_exp_1a)))
# Factor table with Variability x Similarity: Experiment 1
tab_factor_1a <- tibble(cond_var = rep(lev_var, 3),
cond_sim = sort(rep(lev_sim_1a, 2)),
cond_var_fac = factor(cond_var, levels = lev_var,
labels = lab_var),
cond_sim_fac = factor(cond_sim, levels = lev_sim_1a,
labels = lab_sim_1a)) %>%
mutate(cond_exp_fac = paste(cond_sim_fac, cond_var_fac, sep = "-"),
cond_exp_fac = factor(cond_exp_fac, levels = lab_exp_1a))
# Factor table for other experiments
tab_exp <- tibble(cond_exp = c("test-only", lev_exp),
cond_exp_fac = factor(cond_exp,
levels = c("test-only", lev_exp),
labels = c("Test-only", lab_exp)))
# Factor table with Variability x Similarity for Experiments 2 and 3
tab_factor <- tibble(cond_var = rep(lev_var, 2),
cond_sim = sort(rep(lev_sim, 2)),
cond_var_fac = factor(cond_var, levels = lev_var,
labels = lab_var),
cond_sim_fac = factor(cond_sim, levels = lev_sim,
labels = lab_sim)) %>%
mutate(cond_exp_fac = paste(cond_sim_fac, cond_var_fac, sep = "-"),
cond_exp_fac = factor(cond_exp_fac, levels = lab_exp))
# Match type
tab_match <- tibble(match_type = lev_match,
match_type_fac = factor(match_type,
levels = lev_match,
labels = lab_match))
# Word type
tab_type <- tibble(stim_type = c("real", "pseudo"),
stim_type_fac = factor(stim_type, levels = c("real", "pseudo"),
labels = c("Real words", "Pseudowords")))
######################
## Set up contrasts ##
######################
# Create contrast codes: Variability
contrast_var <- matrix(c(1/2, -1/2),
dimnames = list(c("variant", "invariant"),
c("var_invar")))
# Create contrast codes: Similarity
contrast_sim_1a <- matrix(c(1/2, -1/2, 0,
-1/3, -1/3, 2/3),
ncol = 2,
dimnames = list(c("direct", "indirect", "control"),
c("dir_ind", "vot_aff")))
# Create contrast codes: Similarity
contrast_sim <- matrix(c(1/2, -1/2),
dimnames = list(c("direct", "indirect"),
c("dir_ind")))
# Create contrast codes: Training (individual)
contrast_train_1a <- matrix(c(-1/7, 6/7, -1/7, -1/7, -1/7, -1/7, -1/7,
-1/7, -1/7, 6/7, -1/7, -1/7, -1/7, -1/7,
-1/7, -1/7, -1/7, 6/7, -1/7, -1/7, -1/7,
-1/7, -1/7, -1/7, -1/7, 6/7, -1/7, -1/7,
-1/7, -1/7, -1/7, -1/7, -1/7, 6/7, -1/7,
-1/7, -1/7, -1/7, -1/7, -1/7, -1/7, 6/7),
ncol = 6,
dimnames = list(c("test-only", lev_exp_1a),
c("no_var_dir", "no_invar_dir",
"no_var_ind", "no_invar_ind",
"no_var_cont", "no_invar_cont")))
# Create contrast codes: Training (individual)
contrast_train <- matrix(c(-1/5, 4/5, -1/5, -1/5, -1/5,
-1/5, -1/5, 4/5, -1/5, -1/5,
-1/5, -1/5, -1/5, 4/5, -1/5,
-1/5, -1/5, -1/5, -1/5, 4/5),
ncol = 4,
dimnames = list(c("test-only", lev_exp),
c("no_var_dir", "no_invar_dir",
"no_var_ind", "no_invar_ind")))
# Create contrast codes: Match type
contrast_match <- matrix(c(1/2, -1/2, 0,
-1/3, -1/3, 2/3),
ncol = 2,
dimnames = list(c("unrelated", "competitor", "identity"),
c("unrel_comp", "mis_match")))
# Create contrast codes: Word type
contrast_type <- matrix(c(1/2, -1/2),
dimnames = list(c("real", "pseudo"),
c("real_pseudo")))
###############
## Load data ##
###############
# Load exposure data
dat_exp_filt <- read.csv("data/exposure_phase_critical.csv")
# Load test data
dat_test_filt <- read.csv("data/test_phase_critical.csv")
# Filter for RT
dat_exp_rt <- dat_exp_filt %>% dplyr::filter(resp_acc == 1)
# Filter for RT
dat_test_rt <- dat_test_filt %>% dplyr::filter(resp_acc == 1)
# Filter and factor
dat_exp_1 <- dat_exp_filt %>%
dplyr::filter(experiment == "exp 1") %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Add contrasts
contrasts(dat_exp_1$cond_sim) <- contrast_sim_1a
contrasts(dat_exp_1$cond_var) <- contrast_var
contrasts(dat_exp_1$type) <- contrast_type
contrasts(dat_exp_1$stim_type) <- contrast_type
# Filter and factor
dat_exp_1 <- dat_exp_filt %>%
dplyr::filter(experiment == "exp 1") %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Add contrasts
contrasts(dat_exp_1$cond_sim) <- contrast_sim_1a
contrasts(dat_exp_1$cond_var) <- contrast_var
contrasts(dat_exp_1$stim_type) <- contrast_type
# Filter and factor
dat_exp_1_rt <- dat_exp_rt %>%
dplyr::filter(experiment == "exp 1") %>%
left_join(tab_factor_1a, by = c("cond_var", "cond_sim")) %>%
left_join(tab_type, by = c("stim_type")) %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Filter and factor
dat_exp_1_rt <- dat_exp_rt %>%
dplyr::filter(experiment == "exp 1") %>%
left_join(tab_factor_1a, by = c("cond_var", "cond_sim")) %>%
left_join(tab_type, by = c("stim_type")) %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Add contrasts
contrasts(dat_exp_1_rt$cond_sim) <- contrast_sim_1a
contrasts(dat_exp_1_rt$cond_var) <- contrast_var
contrasts(dat_exp_1_rt$stim_type) <- contrast_type
# Filter and factor
dat_test_1 <- dat_test_filt %>%
dplyr::filter(experiment %in% c("exp 1", "exp 1/2")) %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1]) %>%
left_join(tab_exp_1a, by = "cond_exp")
# Add contrasts
contrasts(dat_test_1$cond_exp_fac) <- contrast_train_1a
contrasts(dat_test_1$match_type) <- contrast_match
# Filter and factor
dat_test_1_rt <- dat_test_rt %>%
dplyr::filter(version %in% c("exp 1", "exp 1/2")) %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1]) %>%
left_join(tab_exp_1a, by = "cond_exp")
tab_exp_1a
# Filter and factor
dat_test_1_rt <- dat_test_rt %>%
dplyr::filter(version %in% c("exp 1", "exp 1/2")) %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1])
# Filter and factor
dat_test_1_rt <- dat_test_rt %>%
dplyr::filter(experiment %in% c("exp 1", "exp 1/2")) %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1]) %>%
left_join(tab_exp_1a, by = "cond_exp")
# Add contrasts
contrasts(dat_test_1_rt$cond_exp_fac) <- contrast_train_1a
contrasts(dat_test_1_rt$match_type) <- contrast_match
# Filter and factor
dat_exp_2 <- dat_exp_filt %>%
dplyr::filter(experiment == "exp 2") %>%
mutate(across(.cols = c("participant", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Filter and factor
dat_exp_2 <- dat_exp_filt %>%
dplyr::filter(experiment == "exp 2") %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Add contrasts
contrasts(dat_exp_2$cond_sim) <- contrast_sim
contrasts(dat_exp_2$cond_var) <- contrast_var
contrasts(dat_exp_2$stim_type) <- contrast_type
# Filter and factor
dat_exp_2_rt <- dat_exp_rt %>%
dplyr::filter(experiment == "exp 2") %>%
left_join(tab_factor, by = c("cond_var", "cond_sim")) %>%
left_join(tab_type, by = c("stim_type")) %>%
mutate(across(.cols = c("participant", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Filter and factor
dat_exp_2_rt <- dat_exp_rt %>%
dplyr::filter(experiment == "exp 2") %>%
left_join(tab_factor, by = c("cond_var", "cond_sim")) %>%
left_join(tab_type, by = c("stim_type")) %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Add contrasts
contrasts(dat_exp_2_rt$cond_sim) <- contrast_sim
contrasts(dat_exp_2_rt$cond_var) <- contrast_var
contrasts(dat_exp_2_rt$stim_type) <- contrast_type
# Filter and factor
dat_test_2 <- dat_test_filt %>%
dplyr::filter(experiment %in% c("exp 2", "exp 1/2")) %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1]) %>%
left_join(tab_exp, by = "cond_exp")
# Add contrasts
contrasts(dat_test_2$cond_exp_fac) <- contrast_train
contrasts(dat_test_2$match_type) <- contrast_match
# Filter and factor
dat_test_2_rt <- dat_test_rt %>%
dplyr::filter(experiment %in% c("exp 2", "exp 1/2")) %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1]) %>%
left_join(tab_exp, by = "cond_exp")
# Add contrasts
contrasts(dat_test_2_rt$cond_exp_fac) <- contrast_train
contrasts(dat_test_2_rt$match_type) <- contrast_match
# Filter and factor
dat_exp_3 <- dat_exp_filt %>%
dplyr::filter(experiment == "exp 3") %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Add contrasts
contrasts(dat_exp_3$cond_sim) <- contrast_sim
contrasts(dat_exp_3$cond_var) <- contrast_var
contrasts(dat_exp_3$stim_type) <- contrast_type
# Filter and factor
dat_exp_3_rt <- dat_exp_rt %>%
dplyr::filter(experiment == "exp 3") %>%
left_join(tab_factor, by = c("cond_var", "cond_sim")) %>%
left_join(tab_type, by = c("stim_type")) %>%
mutate(across(.cols = c("id", "stim", "stim_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(stim_vot)[,1],
freq_cent = scale(FreqZipfUS)[,1])
# Add contrasts
contrasts(dat_exp_3_rt$cond_sim) <- contrast_sim
contrasts(dat_exp_3_rt$cond_var) <- contrast_var
contrasts(dat_exp_3_rt$stim_type) <- contrast_type
# Filter and factor
dat_test_3 <- dat_test_filt %>%
dplyr::filter(experiment == "exp 3") %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1]) %>%
left_join(tab_exp, by = "cond_exp")
# Add contrasts
contrasts(dat_test_3$cond_exp_fac) <- contrast_train
contrasts(dat_test_3$match_type) <- contrast_match
# Filter and factor
dat_test_3_rt <- dat_test_rt %>%
dplyr::filter(experiment == "exp 3") %>%
mutate(across(.cols = c("id", "prime", "target", "match_type"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1]) %>%
left_join(tab_exp, by = "cond_exp")
# Add contrasts
contrasts(dat_test_3_rt$cond_exp_fac) <- contrast_train
contrasts(dat_test_3_rt$match_type) <- contrast_match
View(dat_test_rt)
# Filter and factor
dat_test_3_rt_exp <- dat_test_rt %>%
dplyr::filter(experiment == "exp 3" & cond_exp != "Test-only") %>%
mutate(across(.cols = c("id", "prime", "target", "match_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1])
# Add contrasts
contrasts(dat_test_3_rt_exp$cond_sim) <- contrast_sim
x <- dat_test_rt %>%
dplyr::filter(experiment == "exp 3" & cond_exp != "Test-only")
unique(x$cond_sim)
x <- dat_test_rt %>%
dplyr::filter(experiment == "exp 3" & cond_exp != "Test-only" & cond_sim == "test")
View(x)
# Filter and factor
dat_test_3_rt_exp <- dat_test_rt %>%
dplyr::filter(experiment == "exp 3" & cond_exp != "test-only") %>%
mutate(across(.cols = c("id", "prime", "target", "match_type",
"cond_sim", "cond_var"),
as.factor),
trial_cent = scale(trial)[,1],
vot_cent = scale(prime_vot)[,1],
freq_prime_cent = scale(FreqZipfUS_prime)[,1],
freq_target_cent = scale(FreqZipfUS_target)[,1])
# Add contrasts
contrasts(dat_test_3_rt_exp$cond_sim) <- contrast_sim
contrasts(dat_test_3_rt_exp$cond_var) <- contrast_var
contrasts(dat_test_3_rt_exp$match_type) <- contrast_match
setwd("~/Mirror/dissertation/diss_study_1")
